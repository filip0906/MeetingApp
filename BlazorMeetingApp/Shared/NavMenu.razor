@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorMeetingApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="meetings">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Meetings
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="create-meeting">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Create meeting
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isLoggedIn = false;
    private bool isRendered = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            isLoggedIn = !string.IsNullOrEmpty(token);
            isRendered = true;
            StateHasChanged();
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
        isLoggedIn = false;
        NavigationManager.NavigateTo("/login");
    }
}
